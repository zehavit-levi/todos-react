{"version":3,"sources":["components/TodoItem/TodoItem.js","components/TodoList/TodoList.js","components/NewTodoInput/NewTodoInput.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","useState","addButton","setAddButton","Row","className","onMouseOver","onMouseOut","Form","Check","todo","completed","type","checked","onChange","handleChangeProps","id","label","title","value","onClick","deleteTodoProps","handleShow","TodoList","ListGroup","responsive","todos","map","ListGroupItem","NewTodoInput","newTodo","setNewTodo","onSubmit","e","preventDefault","addTodoProps","handleSubmit","Control","placeholder","target","handleChangeNewTodo","App","setTodos","opensTodos","setOpensTodos","filter","setFilter","showModal","setShowModal","todoForDel","setTodoForDel","deleteTodo","handleClose","Container","concat","Math","random","toString","substr","length","Modal","show","onHide","ModalHeader","closeButton","ModalTitle","ModalBody","ModalFooter","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0357a324.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { Form,  Row } from \"react-bootstrap\";\r\nimport './TodoItem.css'\r\nexport default function TodoItem(props) {\r\n    const [addButton, setAddButton] = useState();\r\n    return (\r\n        <Row className=\"todoitem-row\" onMouseOver={() => setAddButton(true)} onMouseOut={() => setAddButton(false)}>\r\n            <Form.Check className={props.todo.completed ? \"todoItem-checkbox checked todoitem-row\" : \"todoItem-checkbox todoitem-row\"}\r\n                type=\"checkbox\"\r\n                checked={props.todo.completed}\r\n                onChange={() => props.handleChangeProps(props.todo.id)}\r\n                label={props.todo.title}>\r\n            </Form.Check>\r\n            <button value={addButton} className={addButton ? \"delete-todoItem-btn visible\" : \"delete-todoItem-btn hidden\"}\r\n                onClick={() => {\r\n                    if (!props.todo.completed) {\r\n                       props.handleShow(props.todo.id);\r\n                    }\r\n                    else props.deleteTodoProps(props.todo.id)\r\n                }}>x</button>\r\n\r\n        </Row>\r\n    )\r\n}","import { ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport TodoItem from \"../TodoItem/TodoItem\";\r\nimport './TodoList.css'\r\n\r\nexport default function TodoList(props) {\r\n\r\n\r\n    return (\r\n        <ListGroup responsive className=\"transparet-element\">\r\n            {props.todos.map(todo =>\r\n                <ListGroupItem  className=\"transparet-element\" key={todo.id}>\r\n                    <TodoItem className=\"transparet-element\" todo={todo}\r\n                        key={todo.id}\r\n                        handleChangeProps={props.handleChangeProps}\r\n                        deleteTodoProps={props.deleteTodoProps}\r\n                        handleShow={props.handleShow}>\r\n                    </TodoItem>\r\n                </ListGroupItem>)}\r\n        </ListGroup>\r\n    )\r\n}","import { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport './NewTodoInput.css';\r\n\r\nexport default function NewTodoInput(props) {\r\n    const [newTodo, setNewTodo] = useState(\"\");\r\n    const handleSubmit = (e, props) => {\r\n        e.preventDefault();\r\n        if(newTodo !== \"\") props.addTodoProps(newTodo);\r\n        setNewTodo(\"\");\r\n    }\r\n\r\n\r\nconst handleChangeNewTodo = (e) => {\r\n    e.preventDefault();\r\n    setNewTodo(e.target.value)\r\n};\r\n\r\nreturn (\r\n    <Form className=\"todo-form\" onSubmit={(e) => handleSubmit(e, props)}>\r\n        <Form.Control type=\"text\" placeholder=\"What's next?\" value={newTodo} onChange={(e) => handleChangeNewTodo(e)} />\r\n    </Form>\r\n)\r\n}","import './App.css';\r\nimport {Button, Container, Modal, ModalBody,  ModalFooter, ModalTitle, Row } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport TodoList from './components/TodoList/TodoList';\r\nimport NewTodoInput from './components/NewTodoInput/NewTodoInput';\r\nimport ModalHeader from 'react-bootstrap/esm/ModalHeader';\r\n\r\nfunction App() {\r\n  const [todos, setTodos] = useState([]);\r\n  const [opensTodos, setOpensTodos] = useState(0);\r\n  const [filter, setFilter] = useState(\"All\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [todoForDel, setTodoForDel] = useState();\r\n\r\n  const addTodoItem = title => {\r\n    setTodos(todos.concat({ \"title\": title, \"id\": '_' + Math.random().toString(36).substr(2, 9), \"completed\": false }));\r\n    setOpensTodos(opensTodos + 1);\r\n  };\r\n\r\n  const handleChange = id => {\r\n    setTodos(todos.map(todo => {\r\n      if (todo.id === id) {\r\n        if (todo.completed) setOpensTodos(opensTodos + 1);\r\n        else (setOpensTodos(opensTodos - 1));\r\n        return {\r\n          ...todo,\r\n          completed: !todo.completed\r\n        }\r\n      }\r\n      return todo\r\n    }\r\n    ))\r\n  };\r\n\r\n  const deleteTodo = id => {\r\n    for (const todo of todos) {\r\n      if (todo.id === id && !todo.completed) {\r\n        setOpensTodos(opensTodos - 1);\r\n      }\r\n    }\r\n    setTodos(todos.filter(todo => todo.id !== id));\r\n  };\r\n\r\n  const handleClose = () => setShowModal(false);\r\n  const handleShow = (id) => {\r\n    setTodoForDel(id);\r\n    setShowModal(true);\r\n  }\r\n  const handleCloseAndDelete = () => {\r\n    deleteTodo(todoForDel);\r\n    setTodoForDel();\r\n    setShowModal(false);\r\n  }\r\n\r\n  return (\r\n    <Container className=\"app-todos\">\r\n      <h1 className=\"header-todo\">Todos</h1>\r\n      <NewTodoInput addTodoProps={addTodoItem} />\r\n      {\r\n        todos.length > 0 ?\r\n          <div>\r\n            <TodoList\r\n              todos={filter === \"All\" ? todos\r\n                : filter === \"Completed\" ? todos.filter(todo => todo.completed)\r\n                  : todos.filter(todo => !todo.completed)\r\n              }\r\n              setTodos={setTodos}\r\n              handleChangeProps={handleChange}\r\n              deleteTodoProps={deleteTodo}\r\n              handleShow={handleShow} />\r\n            <Row className=\"bottom-row\">\r\n              <div className=\"open-todos\">{opensTodos} items left</div>\r\n              <div className=\"button-container\">\r\n                <button className={filter === \"All\" ? \"button-filter marked\" : \"button-filter\"} onClick={() => setFilter(\"All\")}>All</button>\r\n                <button className={filter === \"Active\" ? \"button-filter marked\" : \"button-filter\"} onClick={() => setFilter(\"Active\")}>Active</button>\r\n                <button className={filter === \"Completed\" ? \"button-filter marked\" : \"button-filter\"} onClick={() => setFilter(\"Completed\")}>Completed</button>\r\n              </div>\r\n            </Row>\r\n          </div> : \"\"\r\n      }\r\n      <Modal show={showModal} onHide={handleClose} className=\"delete-modal\">\r\n        <ModalHeader closeButton>\r\n          <ModalTitle>Attention Please!</ModalTitle>\r\n        </ModalHeader>\r\n        <ModalBody>you going to remove a open todo, are you sure?</ModalBody>\r\n        <ModalFooter>\r\n          <Button className=\"modal-delete-button\" onClick={handleClose}>\r\n            No, Don't delete!\r\n          </Button>\r\n          <Button className=\"modal-delete-button\" onClick={handleCloseAndDelete}>\r\n           Yes, Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}